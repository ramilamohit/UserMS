version: 0.2
phases:
  pre_build:
    commands:
      - echo Granting execution permissions to Gradle wrapper...
      - chmod +x ./gradlew
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo Logging into Docker Hub...
      - DOCKER_PASSWORD=Cisco@2020
      - DOCKER_USERNAME=ramilabala@gmail.com
      - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 654654247415.dkr.ecr.us-east-2.amazonaws.com
  build:
    commands:
      - echo Running Gradle build...
      - ./gradlew clean build
      - echo Building the Docker image...
      - IMAGE_REPO_NAME=userms-repo
      - IMAGE_TAG=latest
      - echo img-repo-name $IMAGE_REPO_NAME
      - echo img-tag $IMAGE_TAG
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .

  post_build:
    commands:
      - echo Tagging the Docker image...
      - docker tag userms-repo:latest 654654247415.dkr.ecr.us-east-2.amazonaws.com/userms-repo:latest
      - echo Pushing the Docker image to AWS ECR...
      - docker push 654654247415.dkr.ecr.us-east-2.amazonaws.com/userms-repo:latest
      - echo Writing image definitions file...
      - REPOSITORY_URI=654654247415.dkr.ecr.us-east-2.amazonaws.com/userms-repo
      - echo Writing image definitions file...
      - printf '[{"name":"userms-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      # add your container name
      - DOCKER_CONTAINER_NAME=userms-repo
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - build/libs/*.jar
    - imagedefinitions.json
  discard-paths: yes